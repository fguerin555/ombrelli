/* /Users/fredericguerin/Desktop/ombrelli/src/TestQueryPlan.module.css */

.TestQueryPlanPage {
  padding: 20px;
  font-family: sans-serif;
}

.Titre h1 {
  text-align: center;
  color: #333;
  margin-bottom: 20px;
  font-size: 1.5em;
  color: #005a9c; /* Bleu institutionnel */
}

.controlsHeader {
  display: flex;
  justify-content: space-between; /* Aligne les éléments sur les côtés */
  align-items: center; /* Aligne verticalement les .filterGroup et .searchButton */
  margin-bottom: 20px;
  padding: 15px;
  background-color: #f7ce8b;
  border-radius: 8px;
  flex-wrap: wrap; /* Permet le retour à la ligne sur petits écrans */
  gap: 15px; /* Espace entre les groupes de contrôles */
}

.filterGroup {
  /* Nouvelle classe pour chaque groupe de filtre individuel */
  display: flex;
  flex-direction: column; /* Label au-dessus du champ */
  flex-grow: 1; /* Permet aux groupes de grandir et de remplir l'espace sur les grands écrans */
  min-width: 180px; /* Largeur minimale pour chaque groupe de filtre lorsque en ligne */
}

.filterGroup label {
  display: block; /* Assure que le label prend sa propre ligne */
  margin-bottom: 5px; /* Espace entre le label et le champ */
  font-weight: bold;
  white-space: nowrap; /* Empêche le label de se couper */
  color: #555; /* Cohérence avec ReservationModal */
  font-size: 0.9rem; /* Cohérence avec ReservationModal */
}

.filterGroup input[type="date"],
.filterGroup select {
  width: 100%; /* Le champ prend toute la largeur de son .filterGroup */
  padding: 8px 10px;
  border: 1px solid yellow;
  border-radius: 5cqmax;
  font-size: 0.95rem;
  box-sizing: border-box; /* Important pour que width: 100% inclue padding et border */
}

.filterGroup input[type="date"]:hover,
.filterGroup select:hover {
  background-color: rgba(250, 200, 251, 0.831);
  border-color: goldenrod;
  cursor: pointer;
}
.loadingIndicator,
.errorLoading,
.noResults {
  text-align: center;
  padding: 40px;
  font-size: 1.2em;
  color: #555;
}

.beach_plan {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(60px, 1fr)
  ); /* Ajustement responsive */
  gap: 5px; /* Espace entre les cellules */
  padding: 10px;
  /* background-color: #e0e0e0; Fond gris clair pour le plan */
  background-color: #f7ce8b;
  border-radius: 5px;
  max-width: 100%; /* Assure que le plan ne dépasse pas */
  overflow-x: auto; /* Scroll horizontal si nécessaire */
}

.searchButton {
  padding: 10px 20px;
  background-color: aqua;
  color: black;
  border: 1px solid yellow; /* Typo corrigée de "solid 1 px black" */
  border-radius: 5cqmax;
  cursor: pointer;
  font-size: 1em; /* ou 1rem pour la consistance */
  font-weight: bold;
  transition: background-color 0.2s ease, opacity 0.2s ease; /* Ajouté pour des transitions douces */
  align-self: center; /* Pour un bon alignement vertical dans le flex .controlsHeader */

  padding-top: 8px; /* Ajuster pour correspondre au padding vertical des inputs */
  padding-bottom: 8px; /* Ajuster pour correspondre au padding vertical des inputs */
  line-height: normal; /* Assure que le texte est bien centré verticalement */
  height: auto; /* Laisse le padding définir la hauteur */
}

.searchButton:hover:not(:disabled) {
  background-color: #e9a0f4;
  border-color: goldenrod;
}

.searchButton:disabled {
  background-color: #cccccc;
  color: #666666; /* Optionnel: changer la couleur du texte pour le bouton désactivé */
  cursor: not-allowed;
  opacity: 0.7;
}

.row {
  /* Plus nécessaire avec display: grid sur le parent */
  display: contents; /* Permet aux cellules d'être des enfants directs de la grille */
}

.cell {
  border: 3px solid #161618;
  background-color: #fff; /* Fond blanc par défaut */
  min-height: 50px; /* Hauteur minimale */
  display: flex;
  flex-direction: column; /* Pour superposer les moitiés */
  font-size: 0.8em;
  font-weight: bold;
  text-align: center;
  cursor: default; /* Curseur normal, pas de clic ici par défaut */

  border-radius: 3px;
}

.cell.clickable {
  /* Style pour rendre la cellule explicitement cliquable */
  cursor: pointer;
  position: relative;
}
.cell.clickable:hover {
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
}

.cell.clickable::after {
  content: "Clicka";
  position: absolute;
  bottom: 105%; /* Positionne la bulle au-dessus de la cellule */
  left: 50%;
  transform: translateX(-50%); /* Centre la bulle horizontalement */
  background-color: darkviolet;
  color: white;
  padding: 3px 6px;
  border-radius: 3px;
  font-size: 0.7em; /* Ajuster si besoin */
  white-space: nowrap; /* Empêche le texte de la bulle de passer à la ligne */
  z-index: 10; /* S'assure que la bulle est au-dessus d'autres éléments de la cellule si besoin */
  opacity: 0; /* Invisible par défaut */
  visibility: hidden; /* Cachée par défaut */
  pointer-events: none; /* Empêche la bulle d'intercepter les clics */
  transition: opacity 0.2s ease, visibility 0.2s ease; /* Transition douce */
}

.cell.clickable:hover::after {
  opacity: 1; /* Visible au survol */
  visibility: visible;
}

.cellHalf {
  flex: 1; /* Chaque moitié prend 50% de la hauteur */
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.cell.filteredOut {
  background-color: #f0e8e8; /* Grisé pour les cellules non concernées */
  border-color: #bdbdbd;
  color: #9e9e9e;
  cursor: not-allowed; /* Indique que la cellule n'est pas interactive */
}
.cell.filteredOut .cellHalf {
  background-color: #e0e0e0 !important; /* Force le fond grisé */
}

/* Couleurs spécifiques */
.colorEmpty {
  background-color: #ffffff; /* Blanc */
}
.colorJourEntier {
  background-color: #ffcdd2; /* Rouge clair */
}
.colorMatin {
  background-color: #bbdefb; /* Bleu clair */
}
.colorApresMidi {
  background-color: #ffe0b2; /* Orange clair */
}

/* --- Styles Responsifs --- */
@media (max-width: 1224px) {
  /* Pour tablettes */
  .controlsHeader {
    flex-direction: column; /* Empile les groupes de contrôles (date, condition, bouton) */
    align-items: stretch; /* Étire les groupes pour qu'ils prennent la largeur */
  }

  /* Les .filterGroup (qui remplacent .dateSelector et .conditionSelector comme enfants directs de .controlsHeader)
     vont maintenant s'empiler grâce à la configuration de .controlsHeader. */
  .filterGroup {
    min-width: 0; /* Annule la largeur minimale pour permettre width: 100% (via align-items: stretch du parent) */
    /* width: 100%; est implicitement géré par align-items: stretch sur .controlsHeader */
  }

  /* Les styles pour label, input et select dans .filterGroup sont déjà corrects pour l'empilement vertical. */
  .filterGroup input[type="date"],
  .filterGroup select {
    /* Ajustements spécifiques pour tablette si nécessaire, par exemple la taille de la police */
    font-size: 0.9rem;
  }

  .searchButton {
    /* Le bouton de recherche suit la même logique */
    width: 100%;
    box-sizing: border-box;
    /* Ajustements spécifiques pour le bouton sur tablette si nécessaire */
    margin-top: 10px; /* Espace si le bouton est sur sa propre "ligne" */
    padding: 9px 18px; /* Padding légèrement réduit */
    font-size: 0.95rem; /* Taille de police légèrement réduite */
  }
}

@media (max-width: 509px) {
  /* Pour smartphones */
  .Titre h1 {
    font-size: 1em;
  }
  .controlsHeader {
    flex-direction: column;
    align-items: stretch;
  }

  .filterGroup {
    min-width: 0; /* Annule la largeur minimale */
    /* width: 100%; est implicitement géré par align-items: stretch sur .controlsHeader */
  }

  /* Les styles pour label, input et select dans .filterGroup sont déjà corrects pour l'empilement vertical. */
  .filterGroup input[type="date"],
  .filterGroup select {
    font-size: 1rem; /* Assurer une bonne lisibilité sur mobile */
  }

  .searchButton {
    width: 100%;
    box-sizing: border-box;
    /* Ajustements spécifiques pour le bouton sur mobile */
    margin-top: 10px; /* Espace si le bouton est sur sa propre "ligne" */
    padding: 12px 20px; /* Padding confortable pour le tactile */
    font-size: 1rem; /* Taille de police lisible */
  }

  /* Ajustements optionnels pour le plan sur très petits écrans */
  .beach_plan {
    grid-template-columns: repeat(auto-fill, minmax(45px, 1fr));
    gap: 3px;
  }
  .cell {
    min-height: 40px;
    font-size: 0.7em;
  }
}
